"use strict";

var msgpack = require('@ali/msgpack');
var fileTypes = require('@ali/ding-filetypes');
var Uri = require('jsuri');

var mediaIdHost = 'static.dingtalk.com';
var oldMediaIdHost = 'i01.lw.aliimg.com';
var authMediaIdHost = 'down.dingtalk.com';
var mediaIdDir = 'media';
var authMediaIdDir = 'ddmedia'
var isNoRetina = window.devicePixelRatio === 1;
var PLAIN_MEDIAID_PREFIX = '@', AUTH_MEDIAID_PREFIX = '$'; 
var plainMediaidStruct = {
    TYPE: 0,
    SIZE: 1,
    HEIGHT: 2,
    WIDTH: 3
}
// auth mediaid struct is a object
var authMediaidStruct = {
    IDC: 1,
    TYPE: 2,
    AUTH_TYPE: 3,
    WIDTH: 4,
    HEIGHT: 5,
    RAND_FACTOR: 6
}

var isAuthMediaId = function(mid){
    return mid.charAt(0) === AUTH_MEDIAID_PREFIX;
}
var isPlainMediaId = function(mid){
    return mid.charAt(0) === PLAIN_MEDIAID_PREFIX;
}  

var isMediaId = function(mid){
    return isAuthMediaId(mid) || isPlainMediaId(mid);
}
var mid2Object = function(mid, option) {
    var option = option || {};
    var _isAuthMediaId = isAuthMediaId(mid), _isPlainMediaId = isPlainMediaId(mid);
    if(!_isAuthMediaId && !_isPlainMediaId){
        if(window.location.protocol === 'https:'){
            mid = mid.replace(/^http(?!s)/,'https');
        }
        return {
            url: mid,
            width: null,
            height: null,
            type: null,
        };
    }
    var mediaIdStruct;
    if(_isPlainMediaId) mediaIdStruct = plainMediaidStruct;
    if(_isAuthMediaId) mediaIdStruct = authMediaidStruct;
    // http://tools.ietf.org/html/rfc3548#section-4
    // 服务端对+和/这两个字符做了替换，所以我们要替换回去解析，到url处再替换回去
    mid = mid.replace(/-/gi,'+').replace(/_/gi,'/');
    var mid = mid.substr(1);
    var mediaIdObject = msgpack.decodeFromB64(mid);
    var fileExt = "";
    if(_isPlainMediaId){
        var type = fileTypes.getCateTypeById(mediaIdObject[mediaIdStruct.TYPE]).split('_');
        var _baseUrl = 'https://'+ mediaIdHost +'/'+ mediaIdDir+ '/';
        var sizeSubfix = '_'+mediaIdObject[mediaIdStruct.WIDTH]+'_'+mediaIdObject[mediaIdStruct.HEIGHT];
        fileExt = type[1].toLowerCase();
    }
    if(_isAuthMediaId){
        // 新的authMediaId的type是字符串，扩展名严格使用
        var type = fileTypes.getCateTypeByType(mediaIdObject[mediaIdStruct.TYPE].toLowerCase()).split('_');    
        var _baseUrl = 'https://'+ authMediaIdHost +'/'+ authMediaIdDir+ '/';    
        var sizeSubfix = '';
        fileExt = mediaIdObject[mediaIdStruct.TYPE];
    }
    if(type[0] === 'IMAGE'){
        if(option.imageSize === 'origin'){
            var fileName = mid+sizeSubfix+'.'+fileExt;
        }else{
            if(option.imageSize === 'thumb'){
                var suffix = isNoRetina ? '_60x60q90.jpg':'_120x120q90.jpg';
                var fileName = mid+sizeSubfix+'.'+fileExt+suffix;
            }else{
                if(type[1] === 'GIF'){ // GIF 在 normal 模式下返回原图，要用动态图
                    var fileName = mid+sizeSubfix+'.'+fileExt;
                }else{
                    var suffix = option.autoRotate ? '_620x10000q90g.jpg' : '_620x10000q90.jpg';
                    var fileName = mid+sizeSubfix+'.'+fileExt+ suffix;
                }
            }
        }
    }else{
        var fileName = mid+'.'+fileExt;
    }
    fileName = fileName.replace(/\//gi,'_').replace(/\+/gi,'-');
    var resultUrl = _baseUrl+fileName;
    if(option.queryParams && typeof option.queryParams === 'object'){
        var uri = new Uri(resultUrl);
        Object.keys(option.queryParams).forEach(function(k){
            uri.addQueryParam(k, option.queryParams[k]);
        });
        resultUrl = uri.toString();
    }
    return {
        url: resultUrl,
        width: mediaIdObject[mediaIdStruct.WIDTH],
        height: mediaIdObject[mediaIdStruct.HEIGHT],
        type: type,
    }
}


/**
 *
 * @param mid
 * @param option 支持设置 imageSize:  thumb, normal , origin 默认 normal
 * @returns {*}
 */

var mid2Url=function(mid, option){
    return mid2Object(mid, option).url;
}

function reverseString(s){
    var o = '';
    for (var i = s.length - 1; i >= 0; i--)
        o += s[i];
    return o;
}

var url2Mid = function(url){
    var uri = new Uri(url);
    var isOldUrl = (uri.host() === mediaIdHost || uri.host() === oldMediaIdHost) && uri.uriParts.directory === '/'+ mediaIdDir + '/';
    var isAuthUrl = uri.host() === authMediaIdHost && uri.uriParts.directory === '/'+ authMediaIdDir + '/';
    if(isOldUrl || isAuthUrl){
        var f = uri.uriParts.file;
        var dotIndex = f.indexOf('.');
        if(dotIndex !== -1){
            f = f.slice(0, dotIndex);
            if(isAuthUrl) return '$'+f;
            f = reverseString(f);
            var firstUnderlineIndex = f.indexOf('_');
            if(firstUnderlineIndex !== -1){
                var secondUnderlineIndex = f.indexOf('_', (firstUnderlineIndex+1));
                if(secondUnderlineIndex !== -1){
                    f = f.slice(secondUnderlineIndex + 1);
                    if(f){
                        return '@'+reverseString(f);
                    }
                }
            }
        }
    }
    return url;
}

exports.mid2Url = mid2Url;
exports.url2Mid = url2Mid;
exports.mid2Object = mid2Object;
exports.isMediaId = isMediaId;